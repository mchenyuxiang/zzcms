<?php
/**
 * Created by PhpStorm.
 * User: yuxiang
 * Date: 2017/1/18
 * Time: 15:51
 * Description: 报表
 */
namespace Admin\Controller;


class ReportController extends CommonController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    public function index()
    {

        $this->display();
    }

    public function personalDetail()
    {
        if ($_GET) {
            if ($_GET['employeeId'] == 0) {
                return show_tip(0, '请选择员工');
            }
            if ($_GET['month'] == 0) {
                return show_tip(0, '请选择月份');
            }

            $checksql = "  select 
    a.`checkDay`,
    d.name as employeeName,
    COUNT(a.checkProject) as checknum,
    sum(b.score) as checkscore,
    projectNumber,
    CONCAT(c.name,'--',b.name) AS scoreName,
    (c.`score` * c.`number`) as total,
    (
      (
        c.`score` * c.`number` - sum(b.score)
      ) / (c.`score` * c.`number`)
    ) * 100 AS finalScore 
  from
    zzcms_deduct a 
    left join zzcms_score b 
      on a.checkProject = b.`id` 
    left join zzcms_score c 
      on a.`checkTopid` = c.`id` 
    left join zzcms_employee d 
      on d.`id` = a.`employeeid` 
  where a.employeeid = ".$_GET['employeeId']." 
    and checkDay like '%".$_GET['month']."%' 
  group by a.`id` ";
            $checkTopidRes = M()->query($checksql);
//            print_r($checksql);
            $this->assign('cate', $checkTopidRes);
            $this->assign('type', '个人明细报表');
            $month = array();
            for ($i = 1; $i < 13; $i++) {
                if ($i < 10) {
                    $month[$i]['month'] = '0' . $i;
                } else {

                    $month[$i]['month'] = $i;
                }
            }
            $employeeName = M('employee')->select();
            $this->assign('month', $month);
            $this->assign('employeeName', $employeeName);
            $this->display();
        } else {

            $month = array();
            for ($i = 1; $i < 13; $i++) {
                if ($i < 10) {
                    $month[$i]['month'] = '0' . $i;
                } else {

                    $month[$i]['month'] = $i;
                }
            }
            $employeeName = M('employee')->select();
            $this->assign('employeeName', $employeeName);
            $this->assign('month', $month);
            $this->assign('type', '个人明细报表');
            $this->display();
        }
    }
    
    
    public function personalBasic(){
        if($_GET){

            if ($_GET['employeeId'] == 0) {
                return show_tip(0, '请选择员工');
            }
            if ($_GET['month'] == 0) {
                return show_tip(0, '请选择月份');
            }

            $checksql = "select 
  a.*,
  b.name as evl,
    count(*) as 'checktimes'
from
  (select 
    COUNT(*) AS totaltime,
    d.name as employeeName,
    (c.`score` * c.`number`) as total,
    (
      (
        c.`score` * c.`number` - sum(b.score)
      ) / (c.`score` * c.`number`)
    ) * 100 AS finalScore 
  from
    zzcms_deduct a 
    left join zzcms_score b 
      on a.checkProject = b.`id` 
    left join zzcms_score c 
      on a.`checkTopid` = c.`id` 
    left join zzcms_employee d 
      on d.`id` = a.`employeeid` 
  where a.employeeid = ".$_GET['employeeId']." 
    and checkDay like '%".$_GET['month']."%' 
  group by a.`checkDay`) a 
  join zzcms_level b 
where a.finalScore between b.startscore 
  and b.endscore GROUP BY evl ";
            $checkTopidRes = M()->query($checksql);

            $total = 0;
            foreach ($checkTopidRes as $key=>$v){
                $total = $total + intval($v['totaltime']);
            }

            $this->assign('cate', $checkTopidRes);
            $this->assign('total',$total);
            $this->assign('type', '个人概况');
            $month = array();
            for ($i = 1; $i < 13; $i++) {
                if ($i < 10) {
                    $month[$i]['month'] = '0' . $i;
                } else {

                    $month[$i]['month'] = $i;
                }
            }
            $employeeName = M('employee')->select();
            $this->assign('month', $month);
            $this->assign('employeeName', $employeeName);
            $this->display();
        }else{
            $month = array();
            for ($i = 1; $i < 13; $i++) {
                if ($i < 10) {
                    $month[$i]['month'] = '0' . $i;
                } else {

                    $month[$i]['month'] = $i;
                }
            }
            $employeeName = M('employee')->select();
            $this->assign('employeeName', $employeeName);
            $this->assign('month', $month);
            $this->assign('type', '个人概况');
            $this->display();
        }
    }

    public function ShopDetail(){
        $data = I('get.','');

        $userid = session('zzcms_adm_userid');

        $departmentName = M('department')->where(array('isshop'=>'1'))->select();
        $departmentId = $data['departmentId'];
        $checkStartDay = $data['checkStartDay'];
        $checkEndDay = $data['checkEndDay'];
        if(is_null($checkStartDay) && is_null($data['departmentId'])){
            $checkStartDay = date('Y-m-d');
            $checkEndDay = date('Y-m-d');
            $employeeDemartId = M('employee')->where(array('userId'=>$userid))->select();
            $departmentId = $employeeDemartId[0]['departmentid'];
        }
        $dayDiff1 = diffBetweenTwoDays($checkStartDay,$checkEndDay);
        $dayDiff = $dayDiff1 + 1;
        $date = Array();
        for($i=0;$i<$dayDiff;$i++){
            $date[$i] = date('m/d',strtotime($checkStartDay) + $i * 86400);
        }

        $startTime = date("Y-m-d");

        $saveFood=M('score')->where(array('pid'=>'28'))->order(array('id'=>'desc'))->select();
        $saveFoodCnt = M('score')->where(array('pid'=>'28'))->count();
        for($i=0;$i<$saveFoodCnt;$i++){
            for($j=0;$j<$dayDiff;$j++){
                $scoreInfo[$i][$j] = '-';
            }
            $saveFood[$i]['info'] = $scoreInfo[$i];
        }

        $scoreSql = "SELECT a.id,a.checkDay,a.checkTime,a.checkProject,a.thumb,b.`departmentId`,c.`id` AS scoreid
,c.`name`,sum(c.`score`) as score FROM zzcms_deduct a 
LEFT JOIN zzcms_employee b ON a.`adminId`=b.id 
LEFT JOIN zzcms_score c ON a.`checkProject`=c.`id` 
where c.pid != 0 and b.departmentId=".$departmentId." and a.checkDay >='".$checkStartDay."' and a.checkDay <='".$checkEndDay."' group by a.checkDay,a.checkTime,a.checkProject";

        $scoreRes = M()->query($scoreSql);

        foreach ($saveFood as $key => $v){
            foreach($scoreRes as $k => $va){
                $day = diffBetweenTwoDays($scoreRes[$k]['checkday'],$checkStartDay);
                if($scoreRes[$k]['checkday'] == $checkEndDay){
                    $day = $day + 1;
                }
                if($saveFood[$key]['id'] == $scoreRes[$k]['scoreid']){
                    $saveFood[$key]['info'][$day] = $scoreRes[$k]['score'];
                }
            }
        }

        $this->assign('startTime',$startTime);
        $this->assign('date',$date);
        $this->assign('departmentName',$departmentName);
        $this->assign('cate',$saveFood);
        $this->display();
    }
}

?>

